---
- name: copy google credential json file from ansible controller with SCP
  become: yes
  copy:
    src: "{{ gcloud_credentials_file }}"
    dest: "{{ lookup('env','HOME') }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0644

- name: Update all packages to their latest version
  apt:
    name: "*"
    state: latest

- name: Install "google-cloud-sdk" with option --classic
  snap:
    name: google-cloud-sdk
    classic: yes

- name: Download shell script
  get_url: 
    url: "{{ gitlab_package_url }}"
    dest: "{{ lookup('env','HOME') }}"
    mode: '0700'

- name: install gitlab package shell script
  shell: |
    ./script.deb.sh
  args:
    executable: /bin/bash

- name: Install apt "gitlab-runner"
  apt:
    name:
      - python
      - python-dev
      - python3
      - python3-dev
      - python3-google-auth
      - python3-pip
      - gitlab-runner
      - unzip
      - docker.io
    state: latest

- name: Usermod docker
  command: |
    usermod -aG docker gitlab-runner

- name: Service docker restart
  command: |
    service docker restart

- name: Download terraform package
  get_url:
    url: "{{ terraform_package_url }}"
    dest: "{{ lookup('env','HOME') }}"
    mode: '0644'

- name: Unarchive a file that is already on the remote machine
  command: |
    unzip terraform_1.0.4_linux_amd64.zip

- name: move terraform dir
  command: |
    mv terraform /usr/local/bin/ 

- name: Download kubectl
  get_url:
    url: "{{ kubectl_package_url }}"
    dest: "{{ lookup('env','HOME') }}"
    mode: '0744'

- name: Install kubectl
  command: |
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

- name: gcloud auth activate credential json
  command: |
    gcloud auth activate-service-account --key-file='{{ gcloud_sa_path }}'

- name: gcloud container gke get-credentials
  command: |
    gcloud container clusters get-credentials devops-telkomsel-3 --zone australia-southeast2-a --project purwadhika-devops-kelas1
